FUNCTION_BLOCK jogada

VAR_INPUT
	carta_mais_alta : REAL;
//	carta_media : REAL;
	//carta_mais_baixa : REAL;
	carta_adversario : REAL;
	resultado_parcial : REAL;
	posicao : REAL;
END_VAR

VAR_OUTPUT
	 jogada : REAL;
END_VAR

FUZZIFY carta_mais_alta
	TERM baixa := (4, 1) (10.5, 0) ;
	TERM media := (7, 0) (10.5, 1) (14, 0) ;
	TERM alta := (10.5, 0) (17, 1) ;
END_FUZZIFY

FUZZIFY carta_adversario
	TERM maior := (0, 0) (13, 1) ;
	TERM igual := (-3, 0) (0,1) (3, 0) ; // A Decidir o "Igual"
	TERM menor := (-13, 1) (0,0) ;
END_FUZZIFY

FUZZIFY resultado_parcial
	TERM ruim := (0, 1) (0.5, 0) ;
	TERM medio := (0, 0) (0.5, 1) (1, 0) ;
	TERM bom := (0.5, 0) (1, 1) ;
END_FUZZIFY

FUZZIFY posicao
	TERM primeiro := 0 ;
	TERM segundo := 1 ;
END_FUZZIFY

DEFUZZIFY jogada
	TERM ruim := (0, 1) (33, 0) ;
	TERM media := (17, 0) (33, 1) (42, 1) (58, 0) ;
	TERM boa := (42, 0) (58, 1) (67, 1) (83, 0) ;
	TERM muito_boa := (67, 0) (100, 1) ;
	METHOD : COA;
	DEFAULT := 100;
END_DEFUZZIFY

RULEBLOCK No2
	AND : MIN;
	ACT : MIN;
	ACCU : MAX;
	
	RULE 1 : IF posicao IS primeiro AND resultado_parcial IS bom AND carta_mais_alta IS alta THEN jogada IS muito_boa;
	RULE 2 : IF posicao IS primeiro AND resultado_parcial IS bom AND carta_mais_alta IS media THEN jogada IS boa;
	RULE 3 : IF posicao IS primeiro AND resultado_parcial IS bom AND carta_mais_alta IS baixa THEN jogada IS ruim;
	RULE 4 : IF posicao IS primeiro AND resultado_parcial IS medio AND carta_mais_alta IS alta THEN jogada IS boa;
	RULE 5 : IF posicao IS primeiro AND resultado_parcial IS medio AND carta_mais_alta IS media THEN jogada IS media;
	RULE 6 : IF posicao IS primeiro AND resultado_parcial IS medio AND carta_mais_alta IS baixa THEN jogada IS ruim;
	RULE 7 : IF posicao IS primeiro AND resultado_parcial IS ruim AND carta_mais_alta IS alta THEN jogada IS boa;
	RULE 8 : IF posicao IS primeiro AND resultado_parcial IS ruim AND carta_mais_alta IS media THEN jogada IS media;
	RULE 9 : IF posicao IS primeiro AND resultado_parcial IS ruim AND carta_mais_alta IS baixa THEN jogada IS ruim;
//	RULE 10 : TODO;
	RULE 11 : IF posicao IS segundo AND resultado_parcial IS bom AND carta_adversario IS maior THEN jogada IS ruim;
	RULE 12 : IF posicao IS segundo AND resultado_parcial IS bom AND carta_adversario IS igual THEN jogada IS boa;
	RULE 13 : IF posicao IS segundo AND resultado_parcial IS bom AND carta_adversario IS menor THEN jogada IS muito_boa;
	RULE 14 : IF posicao IS segundo AND resultado_parcial IS medio AND carta_adversario IS maior THEN jogada IS ruim;
	RULE 15 : IF posicao IS segundo AND resultado_parcial IS medio AND carta_adversario IS igual THEN jogada IS media;
	RULE 16 : IF posicao IS segundo AND resultado_parcial IS medio AND carta_adversario IS menor THEN jogada IS boa;
	RULE 17 : IF posicao IS segundo AND resultado_parcial IS ruim AND carta_adversario IS maior THEN jogada IS ruim;
	RULE 18 : IF posicao IS segundo AND resultado_parcial IS ruim AND carta_adversario IS igual THEN jogada IS media;
	RULE 19 : IF posicao IS segundo AND resultado_parcial IS ruim AND carta_adversario IS menor THEN jogada IS boa;
	 
	
END_RULEBLOCK

END_FUNCTION_BLOCK

FUNCTION_BLOCK reacao

VAR_INPUT
	posicao         : REAL;
	pontuacao       : REAL;
	carta_mais_alta : REAL;
    carta_mesa : REAL;
	//carta_mais_baixa : REAL;
	carta_adversario : REAL;
	resultado_parcial : REAL;
END_VAR

VAR_OUTPUT
	 reacao : REAL;
END_VAR

FUZZIFY pontuacao
	TERM truco := 3;
	TERM seis  := 6;
	TERM nove  := 9;
	TERM doze  := 12;
END_FUZZIFY

FUZZIFY carta_mais_alta
	TERM baixa := (4, 1) (10.5, 0) ;
	TERM media := (7, 0) (10.5, 1) (14, 0) ;
	TERM alta := (10.5, 0) (17, 1) ;
END_FUZZIFY

FUZZIFY carta_mesa
	TERM baixa := (4, 1) (10.5, 0) ;
	TERM media := (7, 0) (10.5, 1) (14, 0) ;
	TERM alta := (10.5, 0) (17, 1) ;
END_FUZZIFY

FUZZIFY carta_adversario
	TERM maior := (0, 0) (13, 1) ;
	TERM igual := (-3, 0) (0,1) (3, 0) ; // A Decidir o "Igual"
	TERM menor := (-13, 1) (0,0) ;
END_FUZZIFY

FUZZIFY resultado_parcial
	TERM ruim := (0, 1) (0.5, 0) ;
	TERM medio := (0, 0) (0.5, 1) (1, 0) ;
	TERM bom := (0.5, 0) (1, 1) ;
END_FUZZIFY

FUZZIFY posicao
	TERM primeiro := 0 ;
	TERM segundo := 1 ;
END_FUZZIFY

DEFUZZIFY reacao
	TERM aumenta := (7, 0) (10, 1);
	TERM aceita := (3, 0) (4, 1) (7, 1) (8, 0);
	TERM corre := (0, 1) (3,1) (5, 0) ;
	METHOD : COG;
	DEFAULT := 100;
END_DEFUZZIFY

RULEBLOCK No2
	AND : MIN;
	ACT : MIN;
	ACCU : MAX;
	
	RULE 1 : IF posicao IS primeiro AND (resultado_parcial IS bom OR resultado_parcial IS medio) AND carta_mesa IS alta AND carta_mais_alta IS alta THEN reacao IS aumenta;
	RULE 2 : IF posicao IS primeiro AND resultado_parcial IS bom AND carta_mesa IS alta AND carta_mais_alta IS media THEN reacao IS aceita;
	RULE 3 : IF posicao IS primeiro AND resultado_parcial IS bom AND carta_mesa IS alta AND carta_mais_alta IS baixa THEN reacao IS aceita;
	RULE 4 : IF posicao IS primeiro AND resultado_parcial IS bom AND carta_mesa IS alta AND carta_mais_alta IS baixa THEN reacao IS aceita;
		
END_RULEBLOCK

END_FUNCTION_BLOCK
